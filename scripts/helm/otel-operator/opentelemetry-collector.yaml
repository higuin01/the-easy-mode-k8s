# OpenTelemetry Collector CRD - Managed by Operator
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: monitoring
spec:
  mode: daemonset
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  env:
    - name: KUBE_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName

  tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists

  volumeMounts:
    - name: varlogpods
      mountPath: /var/log/pods
      readOnly: true
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true

  volumes:
    - name: varlogpods
      hostPath:
        path: /var/log/pods
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers

  config:
    receivers:
      # OTLP receiver for modern applications
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      
      # Jaeger receiver for legacy applications
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
      
      # Kubernetes logs collection (minimal)
      filelog:
        include:
          - /var/log/pods/*/*/*.log
        exclude:
          - /var/log/pods/*/otc-container/*.log
          - /var/log/pods/monitoring_promtail*/*.log
          - /var/log/pods/monitoring_otel-collector*/*.log
        start_at: end
        include_file_path: true
        include_file_name: false
        operators:
          - type: regex_parser
            regex: '^[^ ]+ (?P<stream>stdout|stderr) [^ ]* ?(?P<log>.*)$'
          - type: move
            from: attributes.log
            to: body
          - type: add
            field: attributes.source
            value: kubernetes

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      
      resource:
        attributes:
          - key: cluster.name
            value: "local-k8s"
            action: insert
          - key: deployment.environment  
            value: "development"
            action: insert
      
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time

    exporters:
      # Loki for logs (via OTLP HTTP)
      otlphttp/loki:
        endpoint: http://loki-gateway.monitoring.svc.cluster.local:3100/otlp/v1/logs
        tls:
          insecure: true
        
      # Tempo for traces (OTLP native)
      otlp/tempo:
        endpoint: http://tempo-distributor.monitoring.svc.cluster.local:4317
        tls:
          insecure: true
          
      # Debug exporter for troubleshooting
      debug:
        verbosity: detailed
        sampling_initial: 5
        sampling_thereafter: 200

    service:
      pipelines:
        # Pipeline focado em traces primeiro
        traces:
          receivers: [otlp, jaeger]
          processors: [k8sattributes, resource, batch]
          exporters: [otlp/tempo, debug]